[tool.isort]
# Setting compatible with black. See https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = "tests/unit tests/integration"
python_functions = "should_*"
junit_family = "xunit2"
# pytest-dotenv settings
env_override_existing_values = 1
env_files = ".env.test"

# Structure: https://docs.pytest.org/en/stable/warnings.html
# Values:    https://docs.python.org/3/library/warnings.html#describing-warning-filters
#            action:message:category:module:line
filterwarnings = [

]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.poetry]
name = "todoist-habitica-sync"
version = "2.1.0"
description = "One way synchronisation from Todoist to Habitica."
authors = ["Radek LÃ¡t <radek.lat@gmail.com>"]
license = "MIT License"

[tool.poetry.dependencies]
python = "^3.10.1"
todoist-python = "^8.0"
tinydb = "^4.5.2"
ujson = "^5.1.0"
dotmap = "^1.3"
requests = "^2.22"
python-dateutil = "^2.8"
pydantic = {version = "^1.8", extras = ["dotenv"]}

[tool.poetry.dev-dependencies]
poetry = "^1.1.5"
types-toml = "*"
types-requests = "*"
types-python-dateutil = "*"
settings-doc = "^0.8.0"
delfino = {extras = ["verify_all", "build_docker"], version = "^0.12.2"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.delfino]
sources_directory = "src"
tests_directory = "tests"
reports_directory = "reports"
test_types = ["unit", "integration"]
disable_commands = ["upload-to-pypi"]

[tool.delfino.dockerhub]
username = "radeklat"
build_for_platforms = [
    "linux/amd64",
    "linux/arm64",
    "linux/arm/v7",
]
